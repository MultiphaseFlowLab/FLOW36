MF      = Makefile

#define shell
SHELL = /bin/sh

#set path
NVCC_PATH    = $(shell which nvcc)
CUDA_PATH    = $(subst bin/nvcc,,$(NVCC_PATH))
MPIFORT_PATH = $(shell which mpifort)
MPI_PATH     = /cineca/prod/opt/compilers/spectrum_mpi/10.3.1/binary/

FFTWLIB	     = $(FFTW_LIB)
FFTWINC      = $(FFTW_INC)
CPPFLAGS     = -DOPENMPI

FLIBS    =  -I"$(FFTWINC)" -lm -ldl #-lfftw3  #
FLIB     =   -lfftw3###library at the end: single pass linking(?)this is not a HPC runtime valid solution

VPATH   = ./set_run/sc_compiled/


#define Fortran objects list
F_OBJS =  $(shell cat ../../Marconi100/f90_list_gpu.list)

#define CUDA objects list
CUDA_OBJS =  $(shell cat ../../Marconi100/cuda_list_gpu.list)

all:
	make    EXE "PROG = surf36_gpu.exe" \
                "GCC = gcc" \
                "GCCFLAGS = -fno-exceptions " \
                "CPP = cpp" \
                "CPPFLAGS = -cpp " \
                "F90 = mpifort" \
                "F90FLAGS = -O3 $(FLIBS)" \
                "NVCC = nvcc" \
                "NVCCFLAGS = $(CPPFLAGS) -O3 -use_fast_math -arch=sm_70 --ptxas-options=-v -std=c++11" \
                "INCD = -I"$(CUDA_PATH)"/include -I"$(MPI_PATH)"/include -I"$(FFTWINC)" " \
                "LIBS = -L"$(CUDA_PATH)"/lib64 -lcudart -lcurand -lcufft -lstdc++ -L"$(FFTWLIB)" -lfftw3"
alld:
	make    EXE "PROG = surf36_gpu.exe" \
                "GCC = gcc" \
                "GCCFLAGS = -fno-exceptions " \
                "CPP = cpp" \
                "CPPFLAGS = -cpp " \
                "F90 = mpifort" \
                "F90FLAGS = -g -O0 -fcheck=all   $(FLIBS) " \
                "NVCC = nvcc" \
                "NVCCFLAGS = $(CPPFLAGS) -g -G -arch=sm_70 --ptxas-options=-v" \
                "INCD = -I"$(CUDA_PATH)"/include -I"$(MPI_PATH)"/include -I"$(FFTWINC)" " \
                "LIBS = -L"$(CUDA_PATH)"/lib64 -lcudart -lcurand -lcufft -lstdc++ -L"$(FFTWLIB)" -lfftw3"

.SUFFIXES: .cu .h .c .F90 .f90 .o
.c.o:
	$(GCC) $(GCCFLAGS) -c $< $*.o
.cu.o:
	$(NVCC) $(NVCCFLAGS) $(INCD) -c $< $*.o
.f90.o:
	$(F90) $(CPPFLAGS) $(F90FLAGS) -c $<

EXE: $(C_OBJS) $(F_OBJS) $(CUDA_OBJS)
	$(F90) -o $(PROG) $(C_OBJS) $(F_OBJS) $(CUDA_OBJS) $(LIBS)

%.o: %.mod

tar:
	tar cvf $(EXE).tar $(MF) $(SRC)

clean:
	rm -f *.o *.mod *.exe

#objects rules
#fortran objects rule
interfaccia.o:			interfaccia.f90			init_gpu.o		free_gpu.o		cuda_spec_phys.o	cuda_phys_spec.o
#main.o:					main.f90				interfaccia.o
#cuda objects rule
cuda_spec_phys.o:	cuda_spec_phys.cu	cuda_variables.h	cuda_spec_phys.h	cuda_tran.h
cuda_tran.o:		cuda_tran.cu		cuda_variables.h	cuda_tran.h
cuda_phys_spec.o:	cuda_phys_spec.cu	cuda_variables.h	cuda_phys_spec.h	cuda_tran.h
init_gpu.o:		init_gpu.cu		cuda_variables.h	init_gpu.h
free_gpu.o:		free_gpu.cu		cuda_variables.h	free_gpu.h
cuda_spec_phys_fg.o:	cuda_spec_phys_fg.cu	cuda_variables.h	cuda_spec_phys_fg.h	cuda_tran.h
cuda_phys_spec_fg.o:	cuda_phys_spec_fg.cu	cuda_variables.h	cuda_phys_spec_fg.h	cuda_tran.h
